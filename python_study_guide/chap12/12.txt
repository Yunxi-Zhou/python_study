'''

四层协议 从顶到下
应用层 传输层 网际层 网络接口层

七层协议 从顶到下
应用层 表示层｜会话层 传输层｜网络层｜数据链路层 物理层

'''
'''

TCP: Transmission Control Protocol  传输控制协议
IP: 因特网互联协议

TCP/IP协议：应用层-->应用程序 传输层-->TCP 网际层-->IP 网络接口层-->以太网驱动程序
用户数据-->appl首部+用户数据-->TCP首部+appl首部+用户数据-->IP首部+TCP首部+appl首部+用户数据-->以太网首部+IP首部+TCP首部+appl首部+用户数据+以太网尾部

TCP/IP协议数据发送和数据接收
http报文-->TCP首部-->IP数据包-->网络架构 发送方
接收方 http报文<--TCP首部<--IP数据包<--网络架构

TCP协议  三次握手
1. TCP Client --SYN J(同步信号 客户端初始序列号J)-->TCP Server
2. TCP Server --SYN K/ACK J+1(同步信号 服务器端初始序列号K/确认 对客户端 syn j 确认)-->TCP Client
3. TCP Client --ACK K+1(确认 对服务端 syn k 确认)-->TCP Server


UDP: User Datagram Protocol 用户数据包协议

TCP：相当于打电话，需要对方确认，效率低，一对一
UDP: 发短信，不需要对方确认，不一定保证数据发的过去，效率高，一对多，多对多

TCP/UDP：端口号：
区分计算机中运行的应用程序的整数
端口号范围0-65535，80分配http，21分配给FTP

Socket：描述IP地址和端口号

'''

'''

socket对象常用方法

bind((ip,port)) 绑定ip地址和端口
listen(N) 开始TCP监听，N表示操作系统挂起最大连接数量，取值范围1-5之间，一般设置为5
accept() 被动接收TCP客户端连接，阻塞式
connect((ip,port)) 主动初始化TCP服务器连接
recv(size) 接收TCP数据，返回值为字符串类型，size表示要接收的最大数据量

send(str) 发送TCP数据，返回值是要发送的字节数量
sendall(str) 完整发送TCP数据，将str中的数据发送到连接的套接字，返回之前尝试发送所有数据，如果成功为None，失败抛出异常
recvfrom() 接收UDP数据，返回值为一个元组(data,address)，data表示接收的数据，address表示发送数据的套接字地址
sendto(data,(ip,port)) 发送UDP数据，返回值是发送的字节数
close() 关闭套接字

'''